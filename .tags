!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CACHE	.\config\conf.inc.php	/^define( 'CACHE', ROOT . 'cache' . DS );$/;"	d
Conf	.\Includes\Conf.class.php	/^class Conf$/;"	c
DS	.\init.inc.php	/^define( 'DS', DIRECTORY_SEPARATOR );$/;"	d
Db	.\Includes\Db.class.php	/^abstract class Db$/;"	c
Index_Mod	.\Models\Index_Mod.php	/^class Index_Mod extends Sqli$/;"	c
Log	.\Includes\Log.class.php	/^class Log{$/;"	c
Mysql	.\Includes\Mysql.class.php	/^class Mysql extends mysqli$/;"	c
Mysqli	.\Includes\‘≠¿¥.Mysqli.class.php	/^class Mysqli extends Db$/;"	c
Parser	.\Includes\Parser.class.php	/^class Parser$/;"	c
ROOT	.\init.inc.php	/^define( 'ROOT', __DIR__ . DS );$/;"	d
Sqli	.\Includes\Sqli.class.php	/^class Sqli {$/;"	c
TPL	.\config\conf.inc.php	/^define( 'TPL', ROOT . 'templates' . DS );$/;"	d
TPL_C	.\config\conf.inc.php	/^define( 'TPL_C', ROOT . 'templates_c' . DS );$/;"	d
Templates	.\Includes\Templates.class.php	/^class Templates$/;"	c
_AddSlashes	.\Includes\Lib_base.php	/^  function _AddSlashes($arr){$/;"	f
__autoload	.\init.inc.php	/^function __autoload($name){$/;"	f
__clone	.\Includes\Conf.class.php	/^    final protected function __clone() $/;"	f
__construct	.\Includes\Conf.class.php	/^    final protected function __construct()$/;"	f
__construct	.\Includes\Mysql.class.php	/^    function __construct()$/;"	f
__construct	.\Includes\Parser.class.php	/^  function __construct( $tplFile )$/;"	f
__construct	.\Includes\Sqli.class.php	/^    public function  __construct() {$/;"	f
__construct	.\Includes\Templates.class.php	/^  function __construct() $/;"	f
__construct	.\Includes\‘≠¿¥.Mysqli.class.php	/^    public function __construct() $/;"	f
__construct	.\Models\Index_Mod.php	/^    \/\/ function __construct(argument)$/;"	f
__destruct	.\Includes\Mysql.class.php	/^    public function __destruct() $/;"	f
__destruct	.\Includes\Sqli.class.php	/^    public function  __destruct() {$/;"	f
__destruct	.\Includes\‘≠¿¥.Mysqli.class.php	/^    public function __destruct() $/;"	f
__get	.\Includes\Conf.class.php	/^    public function __get( $key )$/;"	f
__set	.\Includes\Conf.class.php	/^    public function __set( $key, $value )$/;"	f
act	.\Includes\Db.class.php	/^    public abstract function autoExcute( $table, $data, $act = 'insert', $where = '' );$/;"	v
affected_rows	.\Includes\Mysql.class.php	/^    public function affected_rows(){$/;"	f
affected_rows	.\Includes\Sqli.class.php	/^    public function affected_rows() {$/;"	f
affected_rows	.\Includes\‘≠¿¥.Mysqli.class.php	/^    public function affected_rows() $/;"	f
all_rows	.\Includes\Sqli.class.php	/^        $all_rows         = array();$/;"	v
arr	.\index.php	/^\/\/ $arr = json_decode($str,true);$/;"	v
assign	.\Includes\Templates.class.php	/^  public function assign( $key, $value )$/;"	f
autoExcute	.\Includes\Db.class.php	/^    public abstract function autoExcute( $table, $data, $act = 'insert', $where = '' );$/;"	f
autoExcute	.\Includes\Mysql.class.php	/^    public function autoExcute($arr, $table, $mode = 'insert', $where = 'where 1 limit 1'){$/;"	f
autoExcute	.\Includes\‘≠¿¥.Mysqli.class.php	/^    public function autoExcute( $arr, $table, $mode = 'insert', $where = ' where 1 limit 1' )$/;"	f
bak	.\Includes\Log.class.php	/^      $bak = ROOT . 'data\/log\/'.date('ymdHis').'.bak';$/;"	v
bak	.\Includes\Log.class.php	/^    public static function bak(){$/;"	f
cache	.\Includes\Sqli.class.php	/^        $this->cache    = $cache;$/;"	v
cache	.\Includes\Sqli.class.php	/^    protected $cache;                               \/\/ÁºìÂ≠òÁ±ªÂØπË±°$/;"	v
cacheFile	.\Includes\Templates.class.php	/^    $cacheFile = CACHE . md5( $file ) . $file . '.html';$/;"	v
cache_all	.\Includes\Sqli.class.php	/^    public function cache_all($sql, $reload = false, $limit = null) {$/;"	f
cache_file	.\Includes\Sqli.class.php	/^            $cache_file = md5($sql.$method);$/;"	v
cache_mark	.\Includes\Sqli.class.php	/^    protected $cache_mark = true;        \/\/ÁºìÂ≠òÊ†áËÆ∞$/;"	v
cache_obj	.\Includes\Sqli.class.php	/^    public function cache_obj($cache) {$/;"	f
cache_one	.\Includes\Sqli.class.php	/^    public function cache_one($sql, $reload = false) {$/;"	f
cache_row	.\Includes\Sqli.class.php	/^    public function cache_row($sql, $reload = false) {$/;"	f
char	.\Includes\‘≠¿¥.Mysqli.class.php	/^    protected function char( $char )$/;"	f
classname	.\init.inc.php	/^    $classname = strtolower(substr($name,-3));$/;"	v
close	.\Includes\Sqli.class.php	/^    protected function close() {$/;"	f
compile	.\Includes\Parser.class.php	/^  public function compile( $parFile )$/;"	f
conStr	.\Includes\Parser.class.php	/^    $conStr = '\/<!--\\{\\s*([\\w]+)\\s*\\}-->\/';$/;"	v
conf	.\Includes\Conf.class.php	/^   $conf = conf::getIns();$/;"	v
conf	.\Includes\Mysql.class.php	/^       $this->conf = Conf::getIns();$/;"	v
conf	.\Includes\Mysql.class.php	/^       \/* $this->conf = Conf::getIns();*\/$/;"	v
conf	.\Includes\Mysql.class.php	/^    protected $conf = array();$/;"	v
conf	.\Includes\Sqli.class.php	/^            $this->conf   = json_decode(file_get_contents(ROOT.'config'.DS.'db.json'),true);$/;"	v
conf	.\Includes\Sqli.class.php	/^    protected $conf       = array();                  \/\/configÈÖçÁΩÆ‰ø°ÊÅØ$/;"	v
conf	.\Includes\‘≠¿¥.Mysqli.class.php	/^        $this->conf = Conf::getIns('mysqli');$/;"	v
conf	.\Includes\‘≠¿¥.Mysqli.class.php	/^    private $conf = array();$/;"	v
conn	.\Includes\Mysql.class.php	/^        $this->conn = new mysqli($h, $u, $p, $d);$/;"	v
conn	.\Includes\Mysql.class.php	/^    protected $conn = NULL;$/;"	v
conn	.\Includes\‘≠¿¥.Mysqli.class.php	/^        $this->conn = mysqli_connect( $h, $u, $p );$/;"	v
conn	.\Includes\‘≠¿¥.Mysqli.class.php	/^    private $conn = NULL;$/;"	v
connect	.\Includes\Db.class.php	/^    public abstract function connect( $h, $u, $p, $d, $c );$/;"	f
connect	.\Includes\Mysql.class.php	/^    public function connect( $h, $u, $p, $d, $c )$/;"	f
connect	.\Includes\‘≠¿¥.Mysqli.class.php	/^    protected function connect( $h, $u, $p )$/;"	f
cont	.\Includes\Log.class.php	/^      $cont = $time .' >>> '. $cont ."\\r\\n";$/;"	v
create	.\Includes\Templates.class.php	/^  public function create($file)$/;"	f
data	.\Includes\Conf.class.php	/^        $this->data = new  SimpleXMLElement ( ROOT.'config\/conf.xml' ,  NULL ,  TRUE );$/;"	v
data	.\Includes\Conf.class.php	/^    protected $data = array();$/;"	v
data	.\Includes\Sqli.class.php	/^                        $data = $key."='".$val."'"; \/\/Á¨¨‰∏ÄÊ¨°ÔºöÂ¶ÇÔºåupdate Ë°®Âêç set username='admin'$/;"	v
data	.\Includes\Sqli.class.php	/^        $data = '';$/;"	v
display	.\Includes\Templates.class.php	/^  public function display( $file )$/;"	f
else	.\Includes\Parser.class.php	/^    $else = '\/\\{\\s*else\\s*\\}\/';$/;"	v
elseIf	.\Includes\Parser.class.php	/^    $elseIf = '\/\\{\\s*else\\s*if\\s*\\$([\\w]+)\\}\/';$/;"	v
endForeach	.\Includes\Parser.class.php	/^    $endForeach = '\/\\{\\s*\\\/foreach\\s*\\}\/';$/;"	v
endIf	.\Includes\Parser.class.php	/^    $endIf = '\/\\{\\s*\\\/if\\s*\\}\/';$/;"	v
error	.\Includes\Mysql.class.php	/^            $error = ("Â§±Ë¥• <<< Êï∞ÊçÆÂ∫ìËøûÊé•" );$/;"	v
error	.\Includes\‘≠¿¥.Mysqli.class.php	/^            $error = new Exception( "Â§±Ë¥• <<< Êï∞ÊçÆÂ∫ìËøûÊé•" );$/;"	v
fetch	.\Includes\Sqli.class.php	/^    protected function fetch() {$/;"	f
fetch_mode	.\Includes\Sqli.class.php	/^        $this->fetch_mode    = $fetch_mode;$/;"	v
fetch_mode	.\Includes\Sqli.class.php	/^        $this->fetch_mode = $fetch_mode;$/;"	v
fetch_mode	.\Includes\Sqli.class.php	/^        $this->fetch_mode = MYSQLI_NUM;$/;"	v
fetch_mode	.\Includes\Sqli.class.php	/^    protected $fetch_mode = MYSQLI_ASSOC;     \/\/Ëé∑ÂèñÊ®°Âºè$/;"	v
fetch_mode	.\Includes\Sqli.class.php	/^    public function get_row($sql, $fetch_mode = MYSQLI_ASSOC) {$/;"	v
fetch_mode	.\Includes\Sqli.class.php	/^    public function real_get($sql, $fetch_mode = MYSQLI_ASSOC) {$/;"	v
fh	.\Includes\Log.class.php	/^      $fh = fopen($log,'ab');$/;"	v
foreach	.\Includes\Parser.class.php	/^    $foreach = '\/\\{\\s*foreach\\s+\\$([\\w]+)\\s*\\(\\s*([\\w]+),\\s*([\\w]+)\\s*\\)\\s*\\}\/';$/;"	v
free	.\Includes\Sqli.class.php	/^    protected function free() {$/;"	f
getAll	.\Includes\Db.class.php	/^    public abstract function getAll( $sql );$/;"	f
getAll	.\Includes\Mysql.class.php	/^    public function getAll( $sql ){$/;"	f
getAll	.\Includes\‘≠¿¥.Mysqli.class.php	/^    public function getAll( $sql )$/;"	f
getIns	.\Includes\Conf.class.php	/^    public static function getIns() $/;"	f
getOne	.\Includes\Db.class.php	/^    public abstract function getOne( $sql );$/;"	f
getOne	.\Includes\Mysql.class.php	/^    public function getOne($sql){$/;"	f
getOne	.\Includes\‘≠¿¥.Mysqli.class.php	/^    public function getOne( $sql )$/;"	f
getRow	.\Includes\Db.class.php	/^    public abstract function getRow( $sql );$/;"	f
getRow	.\Includes\Mysql.class.php	/^    public function getRow($sql){$/;"	f
getRow	.\Includes\‘≠¿¥.Mysqli.class.php	/^    public function getRow( $sql )$/;"	f
get_all	.\Includes\Sqli.class.php	/^    public function get_all($sql, $limit = null, $fetch_mode = MYSQLI_ASSOC) {$/;"	f
get_cache	.\Includes\Sqli.class.php	/^    protected function get_cache($sql,$method) {$/;"	f
get_insert_db_sql	.\Includes\Sqli.class.php	/^    public function get_insert_db_sql($tbl_name,$info)$/;"	f
get_one	.\Includes\Sqli.class.php	/^    public function get_one($sql) {$/;"	f
get_query_sql	.\Includes\Sqli.class.php	/^    protected function get_query_sql($sql, $limit = null) {$/;"	f
get_replace_db_sql	.\Includes\Sqli.class.php	/^    public function get_replace_db_sql($tbl_name,$info)$/;"	f
get_row	.\Includes\Sqli.class.php	/^    public function get_row($sql, $fetch_mode = MYSQLI_ASSOC) {$/;"	f
get_update_db_sql	.\Includes\Sqli.class.php	/^    public function get_update_db_sql($tbl_name,$info,$condition)$/;"	f
i	.\Includes\Sqli.class.php	/^            $i = 0;$/;"	v
i	.\Includes\Sqli.class.php	/^        $i = 0;$/;"	v
if	.\Includes\Parser.class.php	/^    $if = '\/\\{if\\s*\\$([\\w]+)\\}\/';$/;"	v
include	.\Includes\Parser.class.php	/^    $include = '\/\\{include\\s+file\\s*=\\s*(\\"|\\')([\\w\\.\\-\\\/]+)(\\"|\\')\\}\/';$/;"	v
ins	.\Includes\Conf.class.php	/^    protected static $ins = null;$/;"	v
k	.\Includes\Templates.class.php	/^    foreach( $tagLib as $k => $v )$/;"	v
k	.\Includes\‘≠¿¥.Mysqli.class.php	/^            foreach( $arr as $k => $v )$/;"	v
key	.\Includes\Lib_base.php	/^      foreach ($arr as $key => $value) {$/;"	v
key	.\Includes\Mysql.class.php	/^            foreach ($arr as $key => $value) {$/;"	v
key	.\Includes\Sqli.class.php	/^            foreach( $info as $key=>$val )$/;"	v
key	.\Includes\Sqli.class.php	/^            foreach($info as $key=>$val)$/;"	v
last_id	.\Includes\Sqli.class.php	/^    public function last_id() {$/;"	f
limit	.\Includes\Sqli.class.php	/^    protected function get_query_sql($sql, $limit = null) {$/;"	v
limit	.\Includes\Sqli.class.php	/^    public function get_all($sql, $limit = null, $fetch_mode = MYSQLI_ASSOC) {$/;"	v
limit	.\Includes\Sqli.class.php	/^    public function query($sql, $limit = null) {$/;"	v
list	.\Includes\Mysql.class.php	/^        $list = array();$/;"	v
list	.\Includes\‘≠¿¥.Mysqli.class.php	/^        $list = array();$/;"	v
log	.\Includes\Log.class.php	/^      $log = ROOT . 'data\/log\/' . self::LOGFILE ;$/;"	v
log	.\Includes\Log.class.php	/^      $log = self::rSize();$/;"	v
mode	.\Includes\Mysql.class.php	/^    public function autoExcute($arr, $table, $mode = 'insert', $where = 'where 1 limit 1'){$/;"	v
mode	.\Includes\‘≠¿¥.Mysqli.class.php	/^        if( $mode === 'update' )$/;"	v
mode	.\Includes\‘≠¿¥.Mysqli.class.php	/^    public function autoExcute( $arr, $table, $mode = 'insert', $where = ' where 1 limit 1' )$/;"	v
mysqli	.\Includes\Sqli.class.php	/^            $this->mysqli = false;$/;"	v
mysqli	.\Includes\Sqli.class.php	/^            $this->mysqli = new mysqli($this->conf['host'], $this->conf['user'], $this->conf['pswd'], $this->conf['dbname']);$/;"	v
mysqli	.\Includes\Sqli.class.php	/^    protected $mysqli;                              \/\/mysqliÂÆû‰æãÂØπË±°$/;"	v
pCom	.\Includes\Parser.class.php	/^    $pCom = '\/\\{#(.*)#\\}\/';$/;"	v
pStr	.\Includes\Parser.class.php	/^    $pStr = '\/\\{\\$([\\w]+)\\}\/';$/;"	v
parCommon	.\Includes\Parser.class.php	/^  private function parCommon() $/;"	f
parConfig	.\Includes\Parser.class.php	/^  private function parConfig() $/;"	f
parFile	.\Includes\Templates.class.php	/^    $parFile = TPL_C . md5( $file ) . $file . '.php';$/;"	v
parFile	.\Includes\Templates.class.php	/^    $parFile = TPL_C . md5($file) . $file . '.php';$/;"	v
parForeach	.\Includes\Parser.class.php	/^  private function parForeach() $/;"	f
parIf	.\Includes\Parser.class.php	/^  private function parIf() $/;"	f
parInclude	.\Includes\Parser.class.php	/^  private function parInclude() $/;"	f
parVar	.\Includes\Parser.class.php	/^    $parVar = '\/\\{@([\\w]+)\\s*\\}\/';$/;"	v
parVar	.\Includes\Parser.class.php	/^  private function parVar() $/;"	f
parser	.\Includes\Templates.class.php	/^      $parser = new Parser( $tplFile );$/;"	v
proConfigs	.\Includes\Templates.class.php	/^  private $proConfigs = array();$/;"	v
proVars	.\Includes\Parser.class.php	/^  private $proVars = array();$/;"	v
query	.\Includes\Db.class.php	/^    public abstract function query( $sql );$/;"	f
query	.\Includes\Mysql.class.php	/^    public function query($sql){$/;"	f
query	.\Includes\Sqli.class.php	/^    public function query($sql, $limit = null) {$/;"	f
query	.\Includes\‘≠¿¥.Mysqli.class.php	/^    public function query( $sql )$/;"	f
query_num	.\Includes\Sqli.class.php	/^    protected $query_num  = 0;            \/\/ÊâßË°åÊ¨°Êï∞$/;"	v
query_num	.\Includes\Sqli.class.php	/^    public function query_num() {$/;"	f
rSize	.\Includes\Log.class.php	/^    public static function rSize(){$/;"	f
real_get	.\Includes\Sqli.class.php	/^    public function real_get($sql, $fetch_mode = MYSQLI_ASSOC) {$/;"	f
reload	.\Includes\Sqli.class.php	/^        $this->reload   = $reload;$/;"	v
reload	.\Includes\Sqli.class.php	/^        $this->reload = $reload;$/;"	v
reload	.\Includes\Sqli.class.php	/^    protected $reload     = false;             \/\/ÊòØÂê¶ÈáçÊñ∞ËΩΩÂÖ•$/;"	v
reload	.\Includes\Sqli.class.php	/^    public function cache_all($sql, $reload = false, $limit = null) {$/;"	v
reload	.\Includes\Sqli.class.php	/^    public function cache_one($sql, $reload = false) {$/;"	v
reload	.\Includes\Sqli.class.php	/^    public function cache_row($sql, $reload = false) {$/;"	v
res	.\Includes\Sqli.class.php	/^                $res    = $this->$method($sql); \/\/ÂÖà‰ªéÁºìÂ≠ò‰∏≠ÂèñÊï∞ÊçÆÔºåÂ¶ÇÊûúÁºìÂ≠ò‰∏≠Ê≤°Êï∞ÊçÆÔºåÂàô‰ªéÊï∞ÊçÆÂ∫ì‰∏≠ÂèñÊï∞ÊçÆ$/;"	v
res	.\Includes\Sqli.class.php	/^            $res        = $this->cache->get($cache_file);$/;"	v
result	.\Includes\Mysql.class.php	/^        $result = $this->conn->query($sql);$/;"	v
result	.\Includes\Mysql.class.php	/^        $result = $this->query($sql);$/;"	v
result	.\Includes\‘≠¿¥.Mysqli.class.php	/^        $result = $this->query( $sql );$/;"	v
result	.\index.php	/^$result = $show->query($sql);$/;"	v
row	.\Includes\Sqli.class.php	/^        $row              = $this->fetch();$/;"	v
row	.\Includes\Sqli.class.php	/^        $row = $this->fetch();$/;"	v
row	.\Includes\‘≠¿¥.Mysqli.class.php	/^        $row = mysql_fetch_assoc( $str );$/;"	v
row	.\Includes\‘≠¿¥.Mysqli.class.php	/^        while( $row = mysql_fetch_assoc( $result ) )$/;"	v
rs	.\Includes\Sqli.class.php	/^        $this->rs    = $this->mysqli->query($sql);$/;"	v
rs	.\Includes\Sqli.class.php	/^    protected $rs;                                      \/\/ÁªìÊûúÈõÜ$/;"	v
s_fields	.\Includes\Sqli.class.php	/^            $s_fields = "(".implode(",",$fields).")";$/;"	v
s_values	.\Includes\Sqli.class.php	/^            $s_values  = "('".implode("','",$values)."')";$/;"	v
s_values	.\Includes\Sqli.class.php	/^            $s_values = "('".implode("','",$values)."')";$/;"	v
select_db	.\Includes\‘≠¿¥.Mysqli.class.php	/^    protected function select_db( $db )$/;"	f
show	.\index.php	/^$show   = new Index_Mod();$/;"	v
size	.\Includes\Log.class.php	/^        $size = filesize($log);$/;"	v
sql	.\Includes\Mysql.class.php	/^            $sql = 'update '.$table.' set ';$/;"	v
sql	.\Includes\Mysql.class.php	/^            $sql = rtrim($sql, ',');$/;"	v
sql	.\Includes\Mysql.class.php	/^        $sql = 'insert into '.$table.'('.implode('.', array_keys($arr)).')';$/;"	v
sql	.\Includes\Sqli.class.php	/^            $sql      = "REPLACE INTO$/;"	v
sql	.\Includes\Sqli.class.php	/^            $sql = "INSERT INTO$/;"	v
sql	.\Includes\Sqli.class.php	/^            $sql = "UPDATE ".$tbl_name." SET ".$data." WHERE ".$condition;$/;"	v
sql	.\Includes\Sqli.class.php	/^        $sql          = $this->get_query_sql($sql, 1);$/;"	v
sql	.\Includes\Sqli.class.php	/^        $sql         = $this->get_query_sql($sql, $limit);$/;"	v
sql	.\Includes\Sqli.class.php	/^        $sql    = $this->get_query_sql($sql, $limit);$/;"	v
sql	.\Includes\Sqli.class.php	/^    public    $sql;                                          \/\/sqlËØ≠Âè•$/;"	v
sql	.\Includes\‘≠¿¥.Mysqli.class.php	/^            $sql = 'update ' . $table . ' set ';$/;"	v
sql	.\Includes\‘≠¿¥.Mysqli.class.php	/^            $sql = rtrim( $sql, ',' );$/;"	v
sql	.\Includes\‘≠¿¥.Mysqli.class.php	/^        $sql = 'insert into ' . $table . " (" . implode( ',', array_keys( $arr ) ) . ")";$/;"	v
sql	.\Includes\‘≠¿¥.Mysqli.class.php	/^        $sql = 'set names ' . $char;$/;"	v
sql	.\Includes\‘≠¿¥.Mysqli.class.php	/^        $sql = 'use ' . $db;$/;"	v
sql	.\index.php	/^$sql    = 'select * from cat';$/;"	v
str	.\Includes\‘≠¿¥.Mysqli.class.php	/^        $str = $this->conn->query( $sql );$/;"	v
str	.\Includes\‘≠¿¥.Mysqli.class.php	/^        $str = $this->query( $sql );$/;"	v
str	.\index.php	/^\/\/ $str = new  SimpleXMLElement ( ROOT.'config\/conf.xml' ,  NULL ,  TRUE );$/;"	v
table	.\Models\Index_Mod.php	/^    public $table = 'cat';$/;"	v
tagLib	.\Includes\Templates.class.php	/^    $tagLib = json_decode( file_get_contents( ROOT . 'config\/conf.json' ), true );$/;"	v
time	.\Includes\Log.class.php	/^      $time = date("Y:m:d H:i:s", time());$/;"	v
tpl	.\Includes\Parser.class.php	/^          $this->tpl = preg_replace( $else, "<?php }else{ ?>", $this->tpl );$/;"	v
tpl	.\Includes\Parser.class.php	/^          $this->tpl = preg_replace( $elseIf, "<?php }elseif(\\$this->values['$1']){ ?>", $this->tpl );$/;"	v
tpl	.\Includes\Parser.class.php	/^        $this->tpl = preg_replace( $endIf, "<?php } ?>", $this->tpl );$/;"	v
tpl	.\Includes\Parser.class.php	/^        $this->tpl = preg_replace( $if, "<?php if(\\$this->values['$1']){ ?>", $this->tpl );$/;"	v
tpl	.\Includes\Parser.class.php	/^        $this->tpl = preg_replace( $parVar, "<?php echo \\$$1; ?>", $this->tpl );$/;"	v
tpl	.\Includes\Parser.class.php	/^      $this->tpl = preg_replace( $conStr, "<?php echo \\$this->proConfigs['$1']; ?>", $this->tpl );$/;"	v
tpl	.\Includes\Parser.class.php	/^      $this->tpl = preg_replace( $endForeach, "<?php } ?>", $this->tpl );$/;"	v
tpl	.\Includes\Parser.class.php	/^      $this->tpl = preg_replace( $foreach, "<?php foreach(\\$this->values['$1'] as \\$$2 => \\$$3){ ?>", $this->tpl );$/;"	v
tpl	.\Includes\Parser.class.php	/^      $this->tpl = preg_replace( $include, "<?php include '$2'; ?>", $this->tpl );$/;"	v
tpl	.\Includes\Parser.class.php	/^      $this->tpl = preg_replace( $pCom, "<?php \/* $1 *\/ ?>", $this->tpl );$/;"	v
tpl	.\Includes\Parser.class.php	/^      $this->tpl = preg_replace( $pStr, "<?php echo \\$this->values['$1']; ?>", $this->tpl );$/;"	v
tpl	.\Includes\Parser.class.php	/^  private $tpl = null;$/;"	v
tplFile	.\Includes\Templates.class.php	/^    $tplFile = TPL . $file;$/;"	v
tplFile	.\Includes\Templates.class.php	/^    if( !file_exists( $tplFile = TPL . $file ) )$/;"	v
val	.\Includes\Sqli.class.php	/^                    $val = $val;$/;"	v
values	.\Includes\Templates.class.php	/^  private $values = array();$/;"	v
write	.\Includes\Log.class.php	/^    public static function write($cont){$/;"	f
